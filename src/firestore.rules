
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // A user can update their own document.
      // Another user can also update this document, but *only* to increment/decrement the followers count.
      // This is required for the follow/unfollow feature to work.
      allow update: if request.auth != null && (
        (request.auth.uid == userId) ||
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['followers']) &&
          (request.resource.data.followers == resource.data.followers + 1 || request.resource.data.followers == resource.data.followers - 1)
        )
      );

      // Subcollections for followers/following can be written to by any authenticated user.
      match /followers/{followerId} {
        allow read, create, delete: if request.auth != null;
      }
      match /following/{followingId} {
        allow read, create, delete: if request.auth != null;
      }
    }

    match /posts/{postId} {
      allow read;
      allow create: if request.auth != null;
      // Allow any authenticated user to update (for likes/comment counts)
      allow update: if request.auth != null;
      // Only allow the post author to delete
      allow delete: if request.auth.uid == resource.data.author.id;

      match /comments/{commentId} {
        allow read;
        allow create: if request.auth != null;
        allow delete: if request.auth.uid == resource.data.author.id;
      }
    }
  }
}
