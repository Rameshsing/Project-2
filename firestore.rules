rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can be read by anyone.
    // User documents can only be created or updated by the user themselves.
    match /users/{userId} {
      allow read;
      allow create, update: if request.auth != null && request.auth.uid == userId;

      // These subcollections track follows.
      // A user can only modify their own 'following' list.
      // A user can only add/remove themselves from another user's 'followers' list.
      // Anyone can read these lists to get the counts.
      match /following/{followingId} {
        allow read;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }
      match /followers/{followerId} {
        allow read;
        allow create, delete: if request.auth != null && request.auth.uid == followerId;
      }
    }

    // Posts can be read by anyone.
    // They can only be created or deleted by the author.
    // Any authenticated user can update a post (for liking).
    match /posts/{postId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.author.id;
      allow update: if request.auth != null; // Allows liking and comment count updates
      allow delete: if request.auth.uid == resource.data.author.id;

      // Comments can be read by anyone.
      // They can be created or deleted only by the author of the comment.
      match /comments/{commentId} {
        allow read;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.author.id;
        allow delete: if request.auth.uid == resource.data.author.id;
      }
    }
  }
}
